// Pines del sensor de ultrasonido
const int triggerPin = 7;
const int echoPin = 6;

// Pines de los LEDs
const int ledVerde = 2;
const int ledAmarillo = 3;
const int ledRojo = 4;

long duracion;
float distanciaCm;

void setup() {
  // Iniciar comunicación serial
  Serial.begin(9600);

  // Configurar pines del sensor
  pinMode(triggerPin, OUTPUT);
  pinMode(echoPin, INPUT);

  // Configurar pines de los LEDs
  pinMode(ledVerde, OUTPUT);
  pinMode(ledAmarillo, OUTPUT);
  pinMode(ledRojo, OUTPUT);
}

void loop() {
  // Limpiar el trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);

  // Enviar pulso de 10 microsegundos
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);

  // Leer el tiempo que tarda en recibir el eco
  duracion = pulseIn(echoPin, HIGH);

  // Calcular la distancia en cm
  distanciaCm = duracion * 0.034 / 2;

  // Mostrar la distancia en el monitor serial
  Serial.print("Distancia: ");
  Serial.print(distanciaCm);
  Serial.println(" cm");

  // Encender LEDs según la distancia
  if (distanciaCm > 30) {
    digitalWrite(ledVerde, HIGH);
    digitalWrite(ledAmarillo, LOW);
    digitalWrite(ledRojo, LOW);
  } else if (distanciaCm > 10 && distanciaCm <= 30) {
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarillo, HIGH);
    digitalWrite(ledRojo, LOW);
  } else if (distanciaCm > 0 && distanciaCm <= 10) {
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarillo, LOW);
    digitalWrite(ledRojo, HIGH);
  } else {
    // Por si no hay medición
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarillo, LOW);
    digitalWrite(ledRojo, LOW);
  }

  delay(100); // es el tiempo que demorará en cambiar de color
}
